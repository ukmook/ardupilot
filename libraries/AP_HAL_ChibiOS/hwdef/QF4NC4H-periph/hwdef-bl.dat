# hw definition file for processing by chibios_pins.py
# based on qUark F405 UC4H Board

# MCU class and specific type
MCU STM32F4xx STM32F405xx

FLASH_RESERVE_START_KB 0
FLASH_BOOTLOADER_LOAD_KB 64

# board ID for firmware load
APJ_BOARD_ID 7502

# setup build for a peripheral firmware
env AP_PERIPH 1

# crystal frequency
OSCILLATOR_HZ 16000000
define HAL_CUSTOM_CLOCK_TREE
define STM32_PLLM_VALUE 16
define STM32_PLLN_VALUE 336
define STM32_PLLP_VALUE 2
define STM32_PLLQ_VALUE 7

define CH_CFG_ST_FREQUENCY 1000000

# assume 1024k flash part
FLASH_SIZE_KB 1024

# board voltage
STM32_VDD 330U

# order of UARTs
SERIAL_ORDER

PC13 LED_BOOTLOADER OUTPUT LOW
define HAL_LED_ON 1

# USART1
PA2 USART2_TX USART2
PA3 USART2_RX USART2

# USART2 for debug
PC6 USART6_TX USART6
PC7 USART6_RX USART6

PB6 USART1_TX USART1
PB7 USART1_RX USART1

define HAL_USE_SERIAL TRUE

define STM32_SERIAL_USE_USART1 TRUE
define STM32_SERIAL_USE_USART2 TRUE
define STM32_SERIAL_USE_USART6 TRUE

define HAL_NO_GPIO_IRQ
define HAL_USE_EMPTY_IO TRUE

# avoid timer and RCIN threads to save memory
define HAL_NO_TIMER_THREAD
define HAL_NO_RCIN_THREAD

define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE
define NO_DATAFLASH TRUE

define DMA_RESERVE_SIZE 0

define PERIPH_FW TRUE
define HAL_DISABLE_LOOP_DELAY

define HAL_USE_EMPTY_STORAGE 1
define HAL_STORAGE_SIZE 16384

# enable CAN support
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1
define HAL_USE_CAN TRUE
define STM32_CAN_USE_CAN1 TRUE

define CAN_APP_NODE_NAME "org.ardupilot.qUarkF405_TEST"

# use DNA
define HAL_CAN_DEFAULT_NODE_ID 0

# make bl baudrate match debug baudrate for easier debugging
define BOOTLOADER_BAUDRATE 57600

# use a small bootloader timeout
define HAL_BOOTLOADER_TIMEOUT 1000

# reserve 256 bytes for comms between app and bootloader
RAM_RESERVE_START 256

# Add CS pins to ensure they are high in bootloader
PA4 BARO_CS CS
PC4 MPU_CS CS
PC8 SDCARD_CS CS
