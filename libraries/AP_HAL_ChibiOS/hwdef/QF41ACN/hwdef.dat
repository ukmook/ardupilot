# hw definition file for processing by chibios_pins.py
# MCU class and specific type

# MCU class and specific type
MCU STM32F4xx STM32F412Rx

# crystal frequency
OSCILLATOR_HZ 16000000

define CH_CFG_ST_FREQUENCY 1000000

# flash size
FLASH_SIZE_KB 512

STM32_ST_USE_TIMER 5

# enable watchdog
define HAL_WATCHDOG_ENABLED_DEFAULT true

# bootloader starts firmware at 64k
FLASH_RESERVE_START_KB 64

# store parameters in pages 2 and 3
define STORAGE_FLASH_PAGE 2
define HAL_STORAGE_SIZE 8192

# board ID for firmware load
APJ_BOARD_ID 7504

# setup build for a peripheral firmware
env AP_PERIPH 1

define CH_CFG_ST_FREQUENCY 1000000

# STDOUT_SERIAL SD1
# STDOUT_BAUDRATE 57600

define HAL_BARO_ALLOW_INIT_NO_BARO

# avoid RCIN thread to save memory
define HAL_NO_RCIN_THREAD

define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE
define NO_DATAFLASH TRUE

define DMA_RESERVE_SIZE 0

define PERIPH_FW TRUE

define HAL_SUPPORT_RCOUT_SERIAL 0

define HAL_DISABLE_LOOP_DELAY

# use DNA
define HAL_CAN_DEFAULT_NODE_ID 0

define CAN_APP_NODE_NAME "org.ardupilot.QF41ACN"

define HAL_NO_GCS
define HAL_NO_LOGGING
define HAL_NO_MONITOR_THREAD

define HAL_MINIMIZE_FEATURES 0

define HAL_BUILD_AP_PERIPH

define HAL_DEVICE_THREAD_STACK 768

# we setup a small defaults.parm
define AP_PARAM_MAX_EMBEDDED_PARAM 256

# disable dual GPS and GPS blending to save flash space
define GPS_MAX_RECEIVERS 1
define GPS_MAX_INSTANCES 1
define HAL_COMPASS_MAX_SENSORS 1

# use the app descriptor needed by MissionPlanner for CAN upload
env APP_DESCRIPTOR MissionPlanner

# reserve 256 bytes for comms between app and bootloader
RAM_RESERVE_START 256

# default to all pins low to avoid ESD issues
# DEFAULTGPIO OUTPUT LOW PULLDOWN

# --------- Peripherals -----------
define HAL_PERIPH_ENABLE_GPS
define HAL_PERIPH_GPS_PORT_DEFAULT 3

define HAL_PERIPH_ENABLE_BARO

define HAL_PERIPH_ENABLE_BATTERY
define HAL_PERIPH_ENABLE_RC_OUT

define HAL_PERIPH_ENABLE_RANGEFINDER
define HAL_PERIPH_RANGEFINDER_PORT_DEFAULT 1
define RANGEFINDER_MAX_INSTANCES 1

define HAL_PERIPH_ENABLE_NOTIFY

#  SAFE_BUTTON INPUT PULLDOWN
define HAL_HAVE_SAFETY_SWITCH 0

# --------- LED -----------
# a LED to flash
PA6 LED OUTPUT LOW

# --------- ANALOG -----------
# analog pins
PA4 BATT_VOLTAGE_SENS ADC1
PA5 BATT_CURRENT_SENS ADC1
PA7 BATT2_VOLTAGE_SENS ADC1

# define default battery setup
define HAL_BATT_VOLT_PIN 4
define HAL_BATT_CURR_PIN 5
define HAL_BATT_VOLT_SCALE 10.1
define HAL_BATT_CURR_SCALE 17.0

define HAL_BATT2_VOLT_PIN 7
define HAL_BATT2_VOLT_SCALE 10.1

#---------------- SERIAL -----------------------------

# order of UARTs
#            ---------------------------------------
#            | sr0 | sr1 | sr2 | sr3 | sr4 | sr5 | sr6
# AP Name                        GPS
#            ---------------------------------------
SERIAL_ORDER EMPTY USART2 EMPTY USART1

# USART1 GPS
PA9 USART1_TX USART1
PA10 USART1_RX USART1

# USART2 serial2 AUX
PA2 USART2_TX USART2 NODMA
PA3 USART2_RX USART2 NODMA

# SWD debugging
# PA13 JTMS-SWDIO SWD
# PA14 JTCK-SWCLK SWD

#---------------- I2C -----------------------------

# only one I2C bus in normal config
PB10 I2C2_SCL I2C2
PB3 I2C2_SDA I2C2

define HAL_USE_I2C TRUE
define STM32_I2C_USE_I2C2 TRUE

define HAL_I2C_CLEAR_ON_TIMEOUT 0

define HAL_I2C_INTERNAL_MASK 0

# only one I2C bus
I2C_ORDER I2C2

#------------------- SENSORS -----------------------------

# one baro
BARO DPS310 I2C:0:0x76

--------------- CAN -----------------

# enable CAN support
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1

define HAL_CAN_DRIVER_DEFAULT 1

# --------PWMS -----------

PA15 TIM2_CH1 TIM2 PWM(1) GPIO(50)
PB4 TIM3_CH1 TIM3 PWM(2) GPIO(51) # neopixel
PB6 TIM4_CH1 TIM4 PWM(3) GPIO(52)
PB7 TIM4_CH2 TIM4 PWM(4) GPIO(53)

#define BOARD_PWM_COUNT_DEFAULT 4
