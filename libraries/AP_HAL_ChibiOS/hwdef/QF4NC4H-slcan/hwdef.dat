# hw definition file for processing by chibios_pins.py
# based on qUark F405 UC4H Board

# MCU class and specific type
MCU STM32F4xx STM32F405xx

--------------------------------------
# bootloader starts firmware at 26k
# FLASH_RESERVE_START_KB 26
FLASH_RESERVE_START_KB 64

--------------------------------------

define HAL_STORAGE_SIZE 16384
define STORAGE_FLASH_PAGE 2

--------------------------------------

# board ID for firmware load
APJ_BOARD_ID 2004

# setup build for a peripheral firmware
env AP_PERIPH 1

# enable watchdog
define HAL_WATCHDOG_ENABLED_DEFAULT true

STM32_ST_USE_TIMER 5

------------------------------------
# crystal frequency
# OSCILLATOR_HZ 8000000

define CH_CFG_ST_FREQUENCY 100000
define CH_CFG_ST_TIMEDELTA 0

OSCILLATOR_HZ 16000000
define HAL_CUSTOM_CLOCK_TREE
define STM32_PLLM_VALUE 16
define STM32_PLLN_VALUE 336
define STM32_PLLP_VALUE 2
define STM32_PLLQ_VALUE 7
------------------------------------

# assume the 256k flash part for now
# FLASH_SIZE_KB 256
FLASH_SIZE_KB 1024
------------------------------------

# board voltage
STM32_VDD 330U
------------------------------------

STDOUT_SERIAL SD2
STDOUT_BAUDRATE 57600
------------------------------------

# a LED to flash
PC13 LED OUTPUT LOW
------------------------------------

# order of UARTs
#            ---------------------------------------
#            |     |     |     | GPS  |     | RNGF1|
#            ---------------------------------------
SERIAL_ORDER OTG1 USART2 EMPTY USART6 EMPTY USART1

# USB
PA11 OTG_FS_DM OTG1 # 0) USB
PA12 OTG_FS_DP OTG1
PA9 VBUS INPUT OPENDRAIN

# USART2, debug
PA2 USART2_TX USART2 SPEED_HIGH
PA3 USART2_RX USART2 SPEED_HIGH

# USART6 for gps
PC6 USART6_TX USART6 SPEED_HIGH NODMA
PC7 USART6_RX USART6 SPEED_HIGH NODMA

PB6 USART1_TX USART1 SPEED_HIGH
PB7 USART1_RX USART1 SPEED_HIGH

----------------------------------------

# only one I2C bus in normal config USART1
# PB6 I2C1_SCL I2C1
# PB7 I2C1_SDA I2C1

# I2C_ORDER I2C1

# define HAL_USE_I2C TRUE
# define STM32_I2C_USE_I2C1 TRUE

# define HAL_I2C_CLEAR_ON_TIMEOUT 0

# define HAL_I2C_INTERNAL_MASK 0

# define HAL_PROBE_EXTERNAL_I2C_COMPASSES


# --------SPI------------
# spi bus for MPU & BARO
PA5  SPI1_SCK SPI1
PA6  SPI1_MISO SPI1
PA7  SPI1_MOSI SPI1
# PC4 MPU_CS CS
# PA0 MPU60XX_DRDY INPUT
PA4 BARO_CS CS

# analog input
define HAL_USE_ADC FALSE
define STM32_ADC_USE_ADC1 FALSE
define HAL_DISABLE_ADC_DRIVER TRUE

# SPI devices
# SPIDEV mpu9250     SPI1 DEVID4  MPU_CS     MODE3 2*MHZ 8*MHZ
SPIDEV bmp280      SPI1 DEVID3  BARO_CS    MODE3 1*MHZ 8*MHZ
# SPIDEV sdcard      SPI2 DEVID1  SDCARD_CS  MODE0 400*KHZ 25*MHZ

# Compass
# COMPASS AK8963:probe_mpu9250 0 ROTATION_NONE

# IMU
# IMU Invensense SPI:mpu9250 ROTATION_NONE

# baro
BARO BMP280 SPI:bmp280

# PWM output for buzzer
PC9 TIM8_CH4 TIM8 GPIO(77) ALARM

# safety LED, active low
# PB1 SAFE_LED OUTPUT HIGH
# define SAFE_LED_ON 0

# safety button
# PB3 SAFE_BUTTON INPUT PULLDOWN

# WS2812 LED
# PB3 TIM2_CH2 TIM2 PWM(1)

define HAL_BARO_ALLOW_INIT_NO_BARO

define HAL_NO_GPIO_IRQ

# avoid RCIN thread to save memory
define HAL_NO_RCIN_THREAD

define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE
define NO_DATAFLASH TRUE

define DMA_RESERVE_SIZE 0

define PERIPH_FW TRUE

define HAL_DISABLE_LOOP_DELAY

# enable CAN support
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1

# use DNA
define HAL_CAN_DEFAULT_NODE_ID 0

define CAN_APP_NODE_NAME "org.ardupilot.QF4NC4H_ADAPTER"

define HAL_NO_GCS
define HAL_NO_LOGGING
define HAL_NO_MONITOR_THREAD

define HAL_MINIMIZE_FEATURES 0

define HAL_BUILD_AP_PERIPH

# define HAL_DEVICE_THREAD_STACK 768

define AP_PARAM_MAX_EMBEDDED_PARAM 268

# disable dual GPS and GPS blending to save flash space
define GPS_MAX_RECEIVERS 1
define GPS_MAX_INSTANCES 1
define HAL_COMPASS_MAX_SENSORS 1

# GPS+MAG+BARO+Buzzer+NeoPixels
# define HAL_PERIPH_ENABLE_GPS
# define HAL_PERIPH_ENABLE_MAG
# define HAL_PERIPH_ENABLE_BARO
# define HAL_PERIPH_ENABLE_BUZZER
# define HAL_PERIPH_ENABLE_NCP5623_LED
# define AP_PERIPH_LED_BRIGHT_DEFAULT 50

define HAL_PERIPH_ENABLE_RANGEFINDER
define RANGEFINDER_MAX_INSTANCES 1

# use the app descriptor needed by MissionPlanner for CAN upload
env APP_DESCRIPTOR MissionPlanner

# reserve 256 bytes for comms between app and bootloader
RAM_RESERVE_START 256
