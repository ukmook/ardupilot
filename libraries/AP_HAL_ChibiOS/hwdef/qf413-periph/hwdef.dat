# hw definition file for processing by chibios_pins.py
# MCU class and specific type

# MCU class and specific type
MCU STM32F4xx STM32F413xx

# crystal frequency
OSCILLATOR_HZ 16000000
# define HAL_CUSTOM_CLOCK_TREE
# define STM32_PLLM_VALUE 8
# define STM32_PLLN_VALUE 100
# define STM32_PLLP_VALUE 2
# define STM32_PLLQ_VALUE 7

# assume 1536k flash part
FLASH_SIZE_KB 1536

STM32_ST_USE_TIMER 5

# bootloader starts firmware at 64k
FLASH_RESERVE_START_KB 64

# store parameters in pages 2 and 3
define STORAGE_FLASH_PAGE 2
define HAL_STORAGE_SIZE 16384

# board ID for firmware load
APJ_BOARD_ID 2005

# setup build for a peripheral firmware
env AP_PERIPH 1

define PERIPH_FW TRUE

define HAL_BUILD_AP_PERIPH

# GPS+MAG+BARO+Buzzer+NeoPixels
# define HAL_PERIPH_ENABLE_GPS
# define HAL_PERIPH_ENABLE_MAG
# define HAL_PERIPH_ENABLE_BARO
# define HAL_PERIPH_ENABLE_BUZZER
# define HAL_PERIPH_ENABLE_NCP5623_LED
# define AP_PERIPH_LED_BRIGHT_DEFAULT 50
define HAL_PERIPH_ENABLE_RCOUT_TRANSLATOR

# use the app descriptor needed by MissionPlanner for CAN upload
env APP_DESCRIPTOR MissionPlanner

# disable dual GPS and GPS blending to save flash space
# define GPS_MAX_RECEIVERS 1
# define GPS_MAX_INSTANCES 1
# define HAL_COMPASS_MAX_SENSORS 1

define HAL_NO_GCS
define HAL_NO_LOGGING
define HAL_NO_MONITOR_THREAD

define HAL_DISABLE_LOOP_DELAY

define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE
define NO_DATAFLASH TRUE

define HAL_NO_RCIN_THREAD

define HAL_BARO_ALLOW_INIT_NO_BARO

define HAL_USE_ADC FALSE
define STM32_ADC_USE_ADC1 FALSE
define HAL_DISABLE_ADC_DRIVER TRUE

define HAL_CAN_DEFAULT_NODE_ID 0

define CAN_APP_NODE_NAME "org.ardupilot.qF413_periph"

# reserve 256 bytes for comms between app and bootloader
RAM_RESERVE_START 256

env DISABLE_SCRIPTING 1

# a LED to flash
PC15 LED OUTPUT LOW

MAIN_STACK 0x2000
PROCESS_STACK 0x6000

define HAL_CAN_DRIVER_DEFAULT 1

---------------------------------------------

# order of UARTs
#            ---------------------------------------
#            |sr0  |sr1  |sr2  | GPS |sr4  | RNGF1 |
#            ---------------------------------------
SERIAL_ORDER EMPTY EMPTY EMPTY USART1 EMPTY USART2

# USART1 for GPS
PB6 USART1_TX USART1 SPEED_HIGH NODMA
PB7 USART1_RX USART1 SPEED_HIGH NODMA

# USART2 for RNGFND
PA2 USART2_TX USART2 SPEED_HIGH
PA3 USART2_RX USART2 SPEED_HIGH

# define HAL_SERIAL5_PROTOCOL SerialProtocol_Rangefinder
# define HAL_SERIAL5_BAUD 115200

# SWD debugging
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

---------------------------------------------

# only one I2C bus in normal config
PB10 I2C2_SCL I2C2
PB3 I2C2_SDA I2C2

define HAL_USE_I2C TRUE
define STM32_I2C_USE_I2C2 TRUE

define HAL_I2C_CLEAR_ON_TIMEOUT 0

define HAL_I2C_INTERNAL_MASK 0

# only one I2C bus
I2C_ORDER I2C2

------------------------------------------------
# compass
# COMPASS LIS3MDL I2C:0:0x1C false ROTATION_ROLL_180

# 0x1C Slave Address when SA1 is to GND
# 0x1E Slave Address when SA1 is to VCC

# baro
# BARO BMP280 I2C:0:0x76

# PWM output for buzzer
# PA11 TIM1_CH4 TIM1 GPIO(77) ALARM

# safety LED, active low
# PB1 SAFE_LED OUTPUT HIGH
# define SAFE_LED_ON 0

# safety button
# PB3 SAFE_BUTTON INPUT PULLDOWN

-----------------------------------------------

# enable CAN support
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1

# --------PWMS-----------
PA0 TIM2_CH1 TIM2 PWM(1) GPIO(50)
PC8 TIM8_CH3 TIM8 PWM(2) GPIO(51)
PB5 TIM3_CH2 TIM3 PWM(3) GPIO(52)
PB4 TIM3_CH1 TIM3 PWM(4) GPIO(53)

define BOARD_PWM_COUNT_DEFAULT 4

# define HAL_PERIPH_ENABLE_RANGEFINDER
# define RANGEFINDER_MAX_INSTANCES 1
