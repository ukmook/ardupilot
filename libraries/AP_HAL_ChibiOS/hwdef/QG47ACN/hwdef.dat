# hw definition file for processing by chibios_pins.py

# -------- MCU Setup---------------

# MCU class and specific type
MCU STM32G474 STM32G474xx

# bootloader starts firmware at 26k + 4k (STORAGE_FLASH)
FLASH_RESERVE_START_KB 30

# store parameters in pages 13 and 14
define STORAGE_FLASH_PAGE 13
define HAL_STORAGE_SIZE 800

# board ID for firmware load
APJ_BOARD_ID 7506

# setup build for a peripheral firmware
env AP_PERIPH 1

# enable watchdog
define HAL_WATCHDOG_ENABLED_DEFAULT true

# crystal frequency
OSCILLATOR_HZ 16000000

# use TIM5 to leave TIM2 for LED
STM32_ST_USE_TIMER 5

# assume the 512k flash part
FLASH_SIZE_KB 512

# don't share any DMA channels (there are enough for everyone)
DMA_NOSHARE *

#---------------- SERIAL -----------------------------

# order of UARTs
#            ---------------------------------------
#            | sr0 | sr1 | sr2 | sr3 | sr4 | sr5 | sr6
# AP Name                        GPS
#            ---------------------------------------
SERIAL_ORDER EMPTY USART3 EMPTY USART1

# USART1 GPS
PA9 USART1_TX USART1
PA10 USART1_RX USART1

# USART3 serial1 AUX
PB10 USART3_TX USART3
PB11 USART3_RX USART3

# SWD debugging
# PA13 JTMS-SWDIO SWD
# PA14 JTCK-SWCLK SWD

# STDOUT_SERIAL SD1
# STDOUT_BAUDRATE 57600

# allow for reboot command for faster development
# define HAL_PERIPH_LISTEN_FOR_SERIAL_UART_REBOOT_CMD_PORT 0

#---------------- I2C -----------------------------

# only one I2C bus in normal config
# PC4 I2C2_SCL I2C2
# PA8 I2C2_SDA I2C2

# define HAL_USE_I2C TRUE
# define STM32_I2C_USE_I2C2 TRUE

# define HAL_I2C_CLEAR_ON_TIMEOUT 0

# define HAL_I2C_INTERNAL_MASK 0

# only one I2C bus
# I2C_ORDER I2C2

#------------------- SENSORS -----------------------------

# one baro
# BARO BMP280 I2C:0:0x76

# --------- LED -----------
# a LED to flash
PA6 LED OUTPUT LOW

# --------- ANALOG -----------
# analog pins
PA2 BATT_VOLTAGE_SENS ADC1
PA3 BATT_CURRENT_SENS ADC1
PA1 BATT2_VOLTAGE_SENS ADC1

# define default battery setup
define HAL_BATT_VOLT_PIN 3
define HAL_BATT_CURR_PIN 4
define HAL_BATT_VOLT_SCALE 10.1
define HAL_BATT_CURR_SCALE 17.0

define HAL_BATT2_VOLT_PIN 2
define HAL_BATT2_VOLT_SCALE 10.1

define HAL_USE_ADC TRUE
define STM32_ADC_USE_ADC1 TRUE

# ----------CAN------------
# enable CAN support
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1

# --------- Peripherals -----------
define HAL_PERIPH_ENABLE_GPS
define HAL_PERIPH_GPS_PORT_DEFAULT 3

# define HAL_PERIPH_ENABLE_RANGEFINDER
# define HAL_PERIPH_RANGEFINDER_PORT_DEFAULT 1
# define RANGEFINDER_MAX_INSTANCES 1

# define HAL_PERIPH_ENABLE_BARO
define HAL_PERIPH_ENABLE_BATTERY
define HAL_PERIPH_ENABLE_RC_OUT
define HAL_PERIPH_ENABLE_NOTIFY
define HAL_HAVE_SAFETY_SWITCH 0

# --------PWMS -----------

PB3 TIM2_CH2 TIM2 PWM(1) GPIO(50)
PB4 TIM3_CH1 TIM3 PWM(2) GPIO(51) # neopixel
PB6 TIM4_CH1 TIM4 PWM(3) GPIO(52)
PB7 TIM4_CH2 TIM4 PWM(4) GPIO(53)

#define BOARD_PWM_COUNT_DEFAULT 4

# ------- NODE -------------
# use DNA
define HAL_CAN_DEFAULT_NODE_ID 0

define CAN_APP_NODE_NAME "org.ardupilot.QG47ACN"

# -----Boiler Plate ---------

define HAL_CAN_POOL_SIZE 6000

# define HAL_USE_ADC FALSE
# define STM32_ADC_USE_ADC1 FALSE

define HAL_NO_GPIO_IRQ
define SERIAL_BUFFERS_SIZE 512

define NO_DATAFLASH TRUE

define DMA_RESERVE_SIZE 2048

define PERIPH_FW TRUE

# stack for fast interrupts
define PORT_INT_REQUIRED_STACK 64

# MAIN_STACK is stack for ISR handlers
MAIN_STACK 0x300

# PROCESS_STACK controls stack for main thread
PROCESS_STACK 0x800

define HAL_DISABLE_LOOP_DELAY

define HAL_UART_MIN_TX_SIZE 256
define HAL_UART_MIN_RX_SIZE 128

define HAL_UART_STACK_SIZE 0x200

define HAL_NO_GCS
define HAL_NO_LOGGING
define HAL_NO_MONITOR_THREAD

define HAL_MINIMIZE_FEATURES 0

define HAL_BUILD_AP_PERIPH

define HAL_DEVICE_THREAD_STACK 0x200
define STORAGE_THD_WA_SIZE 512
define IO_THD_WA_SIZE      512

define AP_PARAM_MAX_EMBEDDED_PARAM 512

# use the app descriptor needed by MissionPlanner for CAN upload
env APP_DESCRIPTOR MissionPlanner

# reserve 256 bytes for comms between app and bootloader
RAM_RESERVE_START 256

# keep ROMFS uncompressed as we don't have enough RAM
# to uncompress the bootloader at runtime
env ROMFS_UNCOMPRESSED True
